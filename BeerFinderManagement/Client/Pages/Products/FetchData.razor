@page "/products"
@inject HttpClient client
@inject IJSRuntime js

<h3>Products</h3>
<small>Add as many products as you wish.</small>
<div class="form-group">
    <a class="btn btn-success" href="products/create"><i class="oi oi-plus"></i> Create New</a>
</div>
<br>
@if (products == null)
{
    <text>Loading...</text>
}
else if (products.Length == 0)
{
    <text>No Records Found.</text>
}
else
{
<table class="table table-striped">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Type</th>
            <th>Category</th>
            <th>Producer</th>
            <th>Volume</th>
            <th>Country</th>
            <th>Eco</th>
            <th>% Alcohol</th>
            <th>Description</th>
            <th>EAN</th>
            <th>Ref.Id</th>
            <th>Stock</th>
            <th>Shelf</th>
            <th>Rating</th>
            <th>GTIN</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (Product prod in products)
        {
            <tr>
                <td>@prod.Id</td>
                <td>@prod.Name</td>
                <td>@prod.Type</td>
                <td>@prod.Category</td>
                <td>@prod.Producer</td>
                <td>@prod.Volume</td>
                <td>@prod.Country</td>
                <td>@prod.IsEco</td>
                <td>@prod.AlcoholPercentage</td>
                <td>@prod.Description</td>
                <td>@prod.EAN</td>
                <td>@prod.ExternalProductId</td>
                <td>@prod.StockStatus</td>
                <td>@prod.Shelf</td>
                <td>@prod.Rating</td>
                <td>@prod.GTIN</td>
                <td>
                    <a class="btn btn-success" href="product/edit/@prod.Id">Edit</a>
                </td>
                <td>    
                <button class="btn btn-danger" @onclick="@(() => Delete(prod.Id))">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>
}
@code {
    Product[] products { get; set; }
    protected override async Task OnInitializedAsync()
    {
        products = await client.GetFromJsonAsync<Product[]>("api/product");
    }
    async Task Delete(int prodId)
    {
        var prod = products.First(x => x.Id == prodId);
        if (await js.InvokeAsync<bool>("confirm", $"Do you want to delete {prod.Name}'s ({prod.Id}) Record?"))
        {
            await client.DeleteAsync($"api/product/{prodId}");
            await OnInitializedAsync();
        }
    }
}